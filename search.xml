<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>置顶试验</title>
    <url>/year/08/05/%E7%BD%AE%E9%A1%B6%E8%AF%95%E9%AA%8C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      <tags>
        <tag>new</tag>
      </tags>
  </entry>
  <entry>
    <title>硅谷十步学习法</title>
    <url>/year/09/01/%E7%A1%85%E8%B0%B7%E5%8D%81%E6%AD%A5%E5%AD%A6%E4%B9%A0%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="作者简介"><a href="#作者简介" class="headerlink" title="作者简介"></a>作者简介</h1><p>John Z. Sonmez：</p>
<blockquote>
<p>“Simple Programmer”网站的创始人，他不辞辛劳地追求着“将复杂问题转化为简单解决方案”的梦想</p>
</blockquote>
<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><blockquote>
<p>本学习法摘自《软技能 代码之外的生存指南》一书，关于这本书中提到的学习方法，我个人有一些深刻体会。我是一个不太相信别人创造的方法论的人，但我同时是一个缺乏方法论支撑的人，这个学习方法可以快速让你找到学习编程的感觉，后面会摘抄一些原文来让你体会一下。</p>
<blockquote>
<p>人到了一定阶段，会感觉自己需要突破而力不从心，从技术上来讲，也许是你一贯的思考方式或者是行为习惯有一些需要改进的地方，拥抱变化进行改进，才能让你进一步突破思维定势、指数级扩大知识面、增强客观行为能力等等，但千万不要认为这种力不从心是你看到了天花板，回想一下，五年前你能想到现在的生活是如此这般么？永远不要低估自己，要时刻思考改变。时刻改变并不是我们认为的浮躁，而是坚持永恒的改变，这点非常难，而在改变的过程中，学会找到哪些是不变的却是更难的。今天你所拥有的技能在不久的将来就会被淘汰掉，你是否会觉得恐惧？有些人则异常相信自己所拥有技能其背后有强大的平台支撑，每天在安慰自己不必惊慌失措，其实在技术发展日益加速的现在，没有人能一招鲜吃遍天，学科交叉越来越多，需要学习的新东西层出不穷，学习的方法对你来说有改进的地方吗？你的效率如何？知识面有多广？技术研究有多深？试错成本有多高？如果你觉得一个人的精力是有限的，这位同学，我们来查一查Donald Knuth，我来给你讲讲他的事迹。世界在变化，技术在变化，不变的是你的学习能力，而学习能力的实体则是学习方法！</p>
</blockquote>
</blockquote>
<p><img src="https://s1.ax1x.com/2020/09/06/wZ52O1.jpg" alt="图片"></p>
<h1 id="十步学习法发明"><a href="#十步学习法发明" class="headerlink" title="十步学习法发明"></a>十步学习法发明</h1><h2 id="发明者背景"><a href="#发明者背景" class="headerlink" title="发明者背景"></a>发明者背景</h2><p>  多年以来，我都承受着巨大的压力：快速学习新技术、新编程语言、新框架和其他能力。通常，这种压力是我自己造成的，我总是投入新事物，结果力不从心。但是，即便不考虑压力来源，这也迫使我开发出一个可重复使用的自学体系。在接下来的几章里，我会带你了解我自创的进行快速学习的“十步学习法”。让我们先从了解这个体系的确切含义及其工作原理开始。</p>
<h2 id="体系背后的逻辑"><a href="#体系背后的逻辑" class="headerlink" title="体系背后的逻辑"></a>体系背后的逻辑</h2><p>  在我职业生涯的早年间，我学习知识的主要途径就是 “从封面到封底 ”仔细阅读专著 。只有通读全书后我才会将自己学到的知识应用于实践 。使用这个方法，我发现，我确实能学到东西 ，但是效率很低，我还得经常回顾书的内容 ，来弥补自己在该学科方面存在的知识短板 。当我拥有足够的时间，且没有一个真实具体的目标的时候 ，这种学习方法很好。我最终学会了我想要学习的东西 ，而且从头到尾地读书学东西也并不难 ，只是要花时间。</p>
<p>  随着我开始有更紧迫的理由需要快速学习 ，我发现自己原来的方法就无法奏效了 。通常 ，我并没有时间通读全书 ，而且我也发现书本里的很多内容更适合作为参考资料 ，而不适合实际学习 。于是 ，我迫使自己去寻找更好的自学方法 ，能在有限的时间内掌握所需内容 。有些时候 ，我只有一周甚至更少的时间去吸收足够的信息以教给别人 。我发现在这种情况下 ，我很自然地会先明确需要掌握哪些内容 ，再去寻找我能获得这些信息的最佳资源 ，同时也会忽略那些并非达成目标所必需的其他信息 。我发现 ，为了能够掌握一门技术 ，我需要了解以下三个要点 。</p>
<blockquote>
<ol>
<li>如何开始 ——要想开始使用自己所学的 ，我需要掌握哪些基本知识 ？</li>
<li>学科范围 ——我现在学的东西有多宏大 ？我应该怎么做 ？在开始阶段 ，我不需要了解每个细节 ，但是如果我能对该学科的轮廓有大致的了解 ，那么将来我就能发现更多细节 。</li>
<li>基础知识 ——不止在开始阶段 ，要想使用一项特定的技术 ，我需要了解基本的用户案例和最常见的问题 ，也需要知道自己学的哪 20 %就能满足 80 %的日常应用 。</li>
</ol>
</blockquote>
<p> 熟知了这三个关键点后 ，我可以高效地学习一门技术 ，无需通晓全部细节 。我发现 ，如果我了解三项主题 ——如何开始 ，我能做什么 ，以及相关基础知识 ，那么我就能随着学习深入学会所需的其他知识 。 如果我想提前掌握所有知识 ，那只是在浪费时间 ，因为真正重要的内容会湮没在那些细枝末节中 。 这种新方法能让我关注重点 。当我确实需要了解更多细节时 ，我可以利用参考资料来弥补这些不足 。有多少次你从头到尾仔细阅读一本技术书籍 ，却发现自己实际用到的也只是书里介绍的技术的一小部分 ？使用这种方法 ，我在很短的时间内学会了 G o语言 ——仅仅几个星期而已 。我专注于学习如何尽快用 G o语言写代码 。很快我就对这门编程语言以及它有哪些可用的库有了一个大致的了解 。我希望对这门语言能做什么能有一个整体的了解 。最后 ，我完成并掌握了基础知识 。当我需要深入了解时 ，我只需要在这些基础知识的基础上进行扩展 。</p>
<h1 id="十步学习法体系"><a href="#十步学习法体系" class="headerlink" title="十步学习法体系"></a>十步学习法体系</h1><p>  事实证明 ，掌握这三大要点可不像看上去那么轻松 。学会 “如何开始学习一门技术 ”可以说是一项挑战 ，而且往往很难找出那些所谓的 “篇幅只占20% 、然而有效性却达到80% ”的内容 。另外 ，我经常发现 ，要总结出一门技术的应用广泛程度的简短描述 ，是很难的 。通常你需要阅读一整本甚至几本不同的书籍之后才能获得此信息 。为了解决这些问题 ，我又提前做功课 ，确保自己能够找出自己所需的信息 ，并以最合理的方式将它们组织起来 ，实施落地 。 “十步学习法 ”的基本思想就是 ：要对自己要学的内容有个基本的了解 ——了解自己不知道什么就足矣 。然后 ，利用这些信息勾勒出学习的范围 ，即需要学哪些内容 ，以及学成之后又会获得什么 。依靠这些知识 ，你可以找出各种资源 （不局限于书 ）来帮助自己学习 。最后 ，你可以创建自己的学习计划 ，列出要去学习哪些相关课程 ，筛选学习材料 ，只保留能帮助自己达成目标的优质内容 。一旦完成这些工作 ，你对自己要学什么和怎样学都了然于胸 ，你就可以把控自己的学习计划中的每个关键点 ，通过 “学习 —实践 —掌握 —教授 ” （ L e a r n i n g , D o i n g , L e a r n i n g a n d T e a c h i n g ， L D L T ）的过程 ，获得对该学科的深刻理解 ，同时你也向着自己的目标前进 。</p>
<p>  “十步学习法 ”的第一部分是研究 ，它是一次性完成的 。 但是从第 7步到第 1 0步则是重复的过程 ，贯穿于你的学习计划的各个模块 。这个方法非常奏效 ，因为它迫使你提前明确自己的学习目标 ，也持续不断的激励你通过实践 （而不仅仅是读书或听讲座 ）向着目标前进 。</p>
<p><img src="https://www.icode9.com/img/l/?n=20&i=blog/2002005/202008/2002005-20200822013520466-1373540584.png" alt="总体研究"></p>
<p>接下来的几章 ，我们将介绍该方法的实际操作步骤 。你可以根据自己的情况对该方法进行裁剪 ，去掉你不喜欢或者认为无效的部分 ，保留对你有用的部分 。最终 ，你一定会找到适合自己的自学方法 ，而你的未来将仰仗于它 。</p>
<h1 id="十步学习法"><a href="#十步学习法" class="headerlink" title="十步学习法"></a>十步学习法</h1><blockquote>
<p><strong>采取行动</strong></p>
<p>挑选一项你已经烂熟于胸的技术 ，看看你能否明确以下几点 。</p>
<blockquote>
<ol>
<li>如何开始使用它？</li>
<li>该技术应用广度如何？</li>
<li>利用你需要知道的20%发挥出80%的功效</li>
</ol>
</blockquote>
</blockquote>
<h2 id="第一步到第六步：这些步骤只需做一次"><a href="#第一步到第六步：这些步骤只需做一次" class="headerlink" title="第一步到第六步：这些步骤只需做一次"></a>第一步到第六步：这些步骤只需做一次</h2><p>  对于 “十步学习法 ”的前六个步骤 ，你需要集中精力完成足够多的前期调研 ，确保自己明确知道要学哪些内容 ，以及如何确认自己已达成目标 。你还将学到如何挑选最好的资源来帮自己实现目标 、制订学习计划 。这六个步骤只需要针对你想学的每个主题做一次 。第 7步到第 1 0步则要针对在第 5步所制订的学习计划中的每个模块循环往复 。 尽管第 1步到第 6步只需做一次 ，但是它们却是最重要的步骤 ，因为它们将对你未来的成败起决定性作用 。在这六个步骤中 ，你要为自己实际的学习主题做好一切准备工作 。 “不积跬步无以至千里 ” ，基础打得越牢固 ，目标越容易实现 。</p>
<h3 id="第一步：了解全局"><a href="#第一步：了解全局" class="headerlink" title="第一步：了解全局"></a>第一步：了解全局</h3><p>​    学习始终是一项棘手的任务 ，因为在开始学习某些东西的时候 ，你对自己到底要学什么理解得并不透彻 。</p>
<p>​    美国前国防部长唐纳德 ·拉姆斯菲尔德曾说过 “未知之未知 ” （  unknown unknowns ） ，即你根本不知道自己不知道 。 大多数开发人员在打开一本新书开始阅读的时候 ，他们对自己所不知的一无所知 。他们将 “未知之未知 ”留到后面去发现 。 这一方法的问题在于 ，你要么学非所需 ，要么力所不及 。在深入探究某个主题之前至少要对其有所了解 ，这一点非常重要 。这样你才能弄清自己到底要学什么 ，找出最好的学习方式 。 </p>
<p>​    在这一步 ，你要做的就是了解自己将要学习的主题的全局 。这个主题宏观上什么样 ？你能从中学到足够丰富的知识以了解自己所不知道的吗 ？以及自己所不知道的有多少 ？ 假设你想学习数码摄影 。你可能会先在网上搜索与这个主题相关的内容 ，浏览与数码摄影有关的博客和文章 。短短几小时之内你就能对这个主题的全局及现有的子课题有一个清晰的认识 。 </p>
<p>​    要完成这一步 ，你需要对自己想要学的课题做一些基础性研究 。通常你可以使用网络搜索来完成大部分研究 。如果你碰巧有一本关于该主题的书 ，那么你就可以只读一下其中的介绍性章节 ，粗略浏览一下内容 ，但是不要在这一步上花费太多时间 。记住 ，我们在这一步的目的不是要掌握该主题 ，只是对这一主题的相关内容有一个全局性的了解 。</p>
<h3 id="第二步：确定范围"><a href="#第二步：确定范围" class="headerlink" title="第二步：确定范围"></a>第二步：确定范围</h3><p>​    现在 ，你至少对自己的学习主题及其全局有了一个大致的了解 。下一步就是集中精力去明确自己到底要学什么 。在任何项目中 ，明确项目的范围都是至关重要的 ，唯有这样才能了解项目的全局 ，做好相应的准备工作 。与此相比 ，学习并没有什么不同 。让我们继续你要学数码摄影这一例子 。此时 ，你想要理解的是 “这一主题到底有多大 ” ，以及 “如何将其分解为更小的范围 ” 。在一定的时间内 ，你不可能掌握关于数码摄影的一切知识 ，所以你需要决定学习的重点和学习的范围 。如果你想了解如何拍摄人像照片 ，那这就是你的学习范围 。在学习过程中 ，大家很容易犯的一个错误就是试图解决太大的问题而把自己搞得不堪重负 。例如 ，试图全面掌握物理学是不切实际的 ，因为这一主题太过庞大 ，也不够聚焦 。你不可能在有限的时间里学会与物理学有关的一切 ——穷尽一生也不可能 。因此 ，你要明确自己的学习范围 。为此 ， 你需要运用自己在上一步中获得的信息 ，让自己的关注点落脚到更小也更可控的范围 。 让我们看看下面的表 ，看如何将庞大的主题分解为小而聚焦的主题 。</p>
<table>
<thead>
<tr>
<th>初始的主题</th>
<th align="left">可以分解为子主题</th>
</tr>
</thead>
<tbody><tr>
<td>学习C#</td>
<td align="left">学习C#语言的基础知识，掌握如何创建一个简单的控制台程序</td>
</tr>
<tr>
<td>学习Java</td>
<td align="left">学习Java的基础知识，掌握如何利用Java编写一个程序</td>
</tr>
<tr>
<td>学习Linux</td>
<td align="left">了解如何设置和安装Ubuntu Linux，以及如何使用它的基本特性</td>
</tr>
</tbody></table>
<p>​    在上面的例子中 ，是如何将类似 “学习 C # ”这样的宏大主题缩小并聚焦到一个特定范围内的 。我们从一个几乎无边界的主题中明确了一个清晰且聚焦的范围 。 你还会注意到 ，在这一步中 ，我们还为学习添加了一个理由 ，从而将其限定在一个范围明确的主题内 。 例如 ，你想学习Java ，而Java可以实现的东西很多，要明确自己想要学到什么程度，学到哪里才算满意。阐述学习的理由能够帮你明确学习范围 ，因为人们通常是为一些特殊的理由才去学一些东西的 。</p>
<p>​     在这一步中 ，你可以充分利用自己在第 1步中收集到的信息 ，找出自己的学习范围 。同时也可以借助自己的学习理由来决定学习的范围 。在此过程中 ，你可能会受到诱惑 ，为了学习该主题下的不同子主题 ，你可能会扩张你的学习范围而不够聚焦 ，但是请务必抵制住这个诱惑 ，尽可能地保持专注 。你一次只能学一样东西 。你可以稍后再回头学习别的分支领域 ，但就目前而言 ，选择一个专注而聚焦的范围 ，潜心学习吧 。最后 ，在这一步中一定要注意 ：明确学习范围的时候要考虑时间因素 。如果你只有一周时间 ，你需要本着实事求是的态度确定自己能在这段时间内学到什么 。如果你有几个月的时间 ，你也许能攻克一个更大的主题 。你的学习范围务必大小适当 ，既能符合你的学习理由 ，又能符合你的时间限制 。</p>
<h3 id="第三步：定义目标"><a href="#第三步：定义目标" class="headerlink" title="第三步：定义目标"></a>第三步：定义目标</h3><p>​    在全力以赴启动之前 ，明确 “成功 ”的含义极为重要 。如果不知道成功是什么样子 ，很难找准目标 ，也很难知道自己什么时候已经真正达到目标 。 在尝试学习任何东西之前 ，你都应该在自己脑海中清晰地描绘出成功的样子 。当你知道自己的目标是什么的时候 ，你就可以更轻松地使用倒推的方式 ，明确实现目标所需的步骤 。 现在 ，我们依然使用刚才那个学习数码摄影的例子 。你可能已经明确成功的标准包括掌握数码相机的所有功能 ，能够清晰地描述这些功能是什么 ，并且了解何时以及为什么使用每一项功能 。 这一步的目标是形成一份简明清晰的陈述 ，勾勒出你勤奋学习后的成功图景 。根据不同的学习内容 ，这份陈述也各不相同 。但是要确保其中包含具体的成功标准 ，从而能让你用来充分评估自己是否已经达成学习目标 。好的成功标准应该是具体的 、无二义性的 。不要对自己想要完成的任务进行含糊不清的描述 。相反 ，要列出某一特定的结果 ，或者一旦实现自己所能达到的目标你应该能够做到的事情 。下表列出，”好的“和‘不好的“成功标准</p>
<table>
<thead>
<tr>
<th align="left">不好的成功标准</th>
<th>好的成功标准</th>
</tr>
</thead>
<tbody><tr>
<td align="left">我知道如何使用HTML去构建一个网页</td>
<td>我可以使用HTML5在网上为我自己创建一个主页展示我的简历和我的代表性工作</td>
</tr>
<tr>
<td align="left">我学习了C#语言的基础知识</td>
<td>我可以利用C#语言的主要功能写出一个能够实际应用的小程序</td>
</tr>
<tr>
<td align="left">我可</td>
<td></td>
</tr>
</tbody></table>
<p>你想从自己的学习经历中获得什么，就决定了你的成功标准是什么 。 请确保你能借此在学习结束后，来评估自己是否达成了目标 。好的成功标准也能让你向着既定目标不断前进 。</p>
<h3 id="第四步：寻找资源"><a href="#第四步：寻找资源" class="headerlink" title="第四步：寻找资源"></a>第四步：寻找资源</h3><p>还记得学生时代会针对某个特定主题写报告吗 ？如果你写好了报告却只有一条参考文献 ，譬如你所有的信息都来自一本书 ，结果会怎样 ？你可能不会拿到高分。为什么现在很多人学东西的时候却与那时如出一辙 ？关于一个主题我们只读一本书 ，或者所有的研究只使用一个资源 。</p>
<p>要尝试收集到多种多样的资源以帮助你学习 ，而不是只读一本关于这一主题的书 。资源可以是多种多样的 ，不局限于书籍 。事实上 ，如今 ，随着互联网的广泛应用 ，各种类型的内容随处可见 ，你几乎可以针对自己感兴趣的任何主题 ，找到大量的资源 。 </p>
<p>在这一步中 ，你会想找到尽可能多的与自己所选主题相关的资源 。此时你无需考虑这些资源的质量 。这一步与头脑风暴类似 。稍后你会对你找到的这些资源进行过滤 ，去伪存真 ，但是目前还是想先获得尽可能多的不同类型的资源 。要做到这一点 ，最好的方法就是迅速打开电脑 ，开始搜索与自己的主题相关的信息 。我通常会从bilibili开始 ，看看能从中找到做相关视频的up主 ；然后我会用 G o o g l e搜索 ，看看能不能找到视频 、博客文章 、播客和其他有用的内容 。你甚至可以去拜访图书馆 。重点就是你要找到各种不同的资源 。你不想因为单一来源的信息而产生偏见 ，更愿意尽可能获取各种各样的信息 。</p>
<h4 id="信息来源（主要针对的程序员）"><a href="#信息来源（主要针对的程序员）" class="headerlink" title="信息来源（主要针对的程序员）"></a>信息来源（主要针对的程序员）</h4><p>社区类：</p>
<ul>
<li><a href="https://github.com/">GitHub</a></li>
<li><a href="https://stackoverflow.com/">Stack Overflow（问答网站）</a></li>
<li><a href="https://juejin.im/">CSDN</a></li>
<li><a href="https://www.v2ex.com/">v2ex</a></li>
<li><a href="https://www.quora.com/topic/Computer-Programming">quora（国外版知乎）</a></li>
<li><a href="https://www.zhihu.com/topic/19554298/intro">知乎</a></li>
<li><a href="https://juejin.im/">掘金</a></li>
<li><a href="https://www.reddit.com/">reddit</a></li>
</ul>
<p>资讯类：</p>
<ul>
<li><a href="https://www.infoq.cn/">info</a></li>
<li><a href="https://toutiao.io/posts/hot/7">开发者头条</a></li>
<li><a href="http://www.cocoachina.com/">COCOChina_一站式开发者成长社区</a></li>
</ul>
<p>文章类：</p>
<ul>
<li><a href="https://www.cnblogs.com/">博客园</a></li>
<li><a href="https://gank.io/">干货集中营（Android和iOS）</a></li>
<li><a href="https://www.tuicool.com/">推酷</a></li>
</ul>
<p>面试类：</p>
<ul>
<li><a href="https://www.jiuzhang.com/">九章算法（数据结构和算法）</a></li>
<li><a href="https://careercup.com/">careercup</a></li>
<li><a href="https://www.lintcode.com/problem/">lintcode</a></li>
</ul>
<p>教程类：</p>
<ul>
<li><a href="https://www.51zxw.net/">我要自学网</a></li>
<li><a href="https://www.w3school.com.cn/">W3school全球最大的web技术教程网站</a></li>
<li><a href="https://www.w3cschool.cn/">W3Cschool</a></li>
<li><a href="https://www.runoob.com/">菜鸟教程</a></li>
<li><a href="https://www.imooc.com/">慕课</a></li>
<li><a href="https://www.jikexueyuan.com/">极客学院</a></li>
<li><a href="https://www.lanqiao.cn/courses/">蓝桥（实验楼与蓝桥合并到统一域名）</a></li>
<li><a href="https://study.163.com/">网易云课堂</a></li>
<li><a href="https://next.xuetangx.com/">学堂在线</a></li>
<li>中国大学<a href="https://www.icourse163.org/">MOOC</a></li>
</ul>
<p>开源类：</p>
<ul>
<li><a href="https://www.oschina.net/">OSCHINA（开源中国）</a></li>
<li><a href="https://www.open-open.com/">深度开源</a></li>
<li><a href="https://hellogithub.com/">HelloGitHub</a></li>
<li><a href="https://mirrors.tuna.tsinghua.edu.cn/">清华大学开源软件镜像站</a></li>
</ul>
<h3 id="第五步：创建学习计划"><a href="#第五步：创建学习计划" class="headerlink" title="第五步：创建学习计划"></a>第五步：创建学习计划</h3><p>你有没有注意过 ，大多数书籍都被分解成若干章 ，各章在内容上又层层推进 ？好的技术书都遵循这样的规律 ：打好基础 ，做好铺垫 ，然后逐个展开每一章的论述 。现在你已经掌握了一些资源 ，你可以借助这些资源对自己要学什么 、以什么顺序进行有了想法 。现在你应该对数码摄影到底要学什么有了很好的认识 。你需要通览已有的数码摄影的相关资料 ，找到一种方法将这个主题分解成更小的部分 。</p>
<p>对于大多数学科而言 ，学习是一个自然的过程 。从 A开始 ，前进到 B ，最后到达 Z 。这个顺序对你掌握随机的碎片化知识价值不大 。你需要找出在最短的时间内从 A到 Z的正确路径 ，并且到达沿途的重要地标 。</p>
<p>在这一步 ，你需要创建自己的学习路径 。把它看作自己写书时候的大纲 。事实上 ， 当你大功告成的时候 ，你会发现自己的学习路径可能与一本书的目录非常相似 。你基本上就是完成一系列的模块 ，直到最后达成目标 。</p>
<p>打造自己的学习计划 ，一个好方法就是观察别人是如何教你感兴趣的主题的 。就我自己而言 ，在这一步我通常会翻看自己在第 4步中找来的图书的目录 。如果五位不同的作者都把内容都分解为相同的模块和顺序 ，那我就会遵循这样的方法制订自己的学习计划 。这并不意味着你只要复制一本书的目录就可以称其为自己的学习计划了 。有的书的内容超出你的需求 ，有的书的结构很差劲儿 。通览你收集到的全部资源 ，你就对自己需要哪些内容以及如何组合这些内容有更清晰的认识 。</p>
<h3 id="第六步：筛选资源"><a href="#第六步：筛选资源" class="headerlink" title="第六步：筛选资源"></a>第六步：筛选资源</h3><p>现在 ，你知道自己要学什么以及以什么顺序学 ，那么是时候决定要使用哪些资源来完成自己的学习任务了 。回到第4步 ，你收集了与研究主题相关的所有资源 。在第5步中你使用这些资源制订了自己的个人学习计划 。 现在是时候对这些资源进行筛选 ，挑选最有价值的几项来帮你实现自己的目标 。这时的你已经有了大把关于数码摄影的书籍 、博客文章和其他资源等 ，不一而足 。但是 ，问题是你该如何利用这些资源 。很多数据都是冗余 ，并非所有资源都适合你的学习计划 。 为了研究一个主题要读 1 0本书 、50篇博客文章 ，并不现实 ，并且即使你真的这么做了 ，其中也有很大一部分是重复的 。因此很有必要对现有资源进行筛选 ，从中选出最能帮助你实现自己的目标的资源 。这样想一想 ：在第 6步中 ，你就是一位篮球教练 ，你需要精简队伍 。当然 ，你想让所有人都去打比赛 ，但这显然是不可能的 。你不得不将队员人数减少到自己可以管理的规模 。 在这一步中 ，把你在第 4步中收集的全部资源浏览一遍 ，找出哪些内容能够覆盖你的学习计划 。你还应当看看评论 ，试着找出品质最高的资源 。 我在购书时 ，通常会浏览亚马逊上的评论 ，找出我认为最物超所值的一两本书 。一旦完成了这一步 ，你就可以准备前进到学习计划中的第一个模块 。在你实现自己的目标之前 ，你还需要为每个模块重复第7步到第10步 。</p>
<blockquote>
<p><strong>采取行动</strong></p>
<p>挑选你想要了解的一项课题 ，实际经演练一下上述这六个步骤 。你可以从一些规模较小的课题开始 ，以便让自己习惯于这一过程 。但是注意 ，一定要实际运用 。如果你只是把这些步骤当作是阅读内容 ，那么它们对你不会有太大用处 。</p>
</blockquote>
<h2 id="第七步到第十步：循环往复"><a href="#第七步到第十步：循环往复" class="headerlink" title="第七步到第十步：循环往复"></a>第七步到第十步：循环往复</h2><p>在开始最有趣的部分 。接下来的四个步骤会在你的学习计划所定义的各个模块中循环往复 。 步骤 7到步骤 1 0的目标是通过 “学习 —实践 —掌握 —教授 ” （ L D L T ）的方式真正领会知识 。 你从掌握恰到好处可以开始的基础知识开始 ，然后通过操作来学习 ，同时也通过自我探索收集问题 。之后 ，你掌握了足够多的有用的知识 。最后 ，你能将自己学到的教给他人 ，以此来弥补自己在学习过程中的不足 ，同时通过深入思考巩固知识 。  </p>
<h3 id="第七步：开始学习，浅尝辄止"><a href="#第七步：开始学习，浅尝辄止" class="headerlink" title="第七步：开始学习，浅尝辄止"></a>第七步：开始学习，浅尝辄止</h3><p>大多数人 ，包括我自己 ，在学习过程中通常会犯两类错误 ：第一类错误是在知之不多的情况下就盲目开始 ，即行动太快 ；第二类错误是在行动之前准备过多 ，即行动太晚 。要想在这二者之间取得平衡 ，你掌握的知识要恰到好处 ，足以能让你开始学习 ，但又不会多到让你无力探索 ，这样你的学习效果最佳 。 在这一步中 ，你的目标是获得足够多的与所学主题相关的信息 ，从而能让你开始学习 ，并在下一步中动手操作 。对于编程语言或框架这样的技术 ，这一步还包括掌握如何创建一个基本的 “ H e l l o , w o r l d ! ”程序 ，或者设置自己的开发环境 。 对于摄影这个例子来说 ，这一步包括自己在不同的光线条件下调试光圈及其效果 。 这一步的关键在于过犹不及 。你会很容易就失去自控力 ，开始消化计划学习中列出的所有资源 。但是 ，你会发现 ，如果你能经受住这样的诱惑 ，你会取得更大的成就 。你要专注于掌握自己所需的 、能在下一步动手操作的最小量的知识 。你可以浏览参考材料 ，或者每章的摘要 ，或者各种简介 ，这些信息足以让你对自己要做什么有基本的认识 。</p>
<h3 id="第八步：动手操作，边玩边学"><a href="#第八步：动手操作，边玩边学" class="headerlink" title="第八步：动手操作，边玩边学"></a>第八步：动手操作，边玩边学</h3><p>这一步真是既有趣又可怕 。说它有趣是因为你真的是在玩耍 ，说它可怕是因为这一步完全没有边际 。这一步没有任何规则 ，你可以做任何你想做的事情 。如何更好地实施这一步 ，完全由你决定 。起初 ，你会觉得这步似乎并不重要 ，不过还是让我们先来考量一下其他的方式 ——大多数人学习的方式 。大多数人会试图通过读书或观看视频来掌握某个主题 。他们会提前吸收很多信息 ，然后再付诸实践 。这一方法的问题在于 ，在他们读书或看视频的时候 ，他们并不知道哪些内容是重点 。他们只是因循他人设计好的学习路径 。让我们继续学习数码摄影的例子 。假定你要学习光线对数码摄影的影响 ，所以在这一步中 ，你会一直练习在不同的光照条件下拍照 。你可能只是走到室外调节光圈 ，也可能在不同的环境下拍照 ；其间 ，你并没有意识到自己在做什么 。你在探索中学习 ，也发现了许多问题 。现在 ，考虑一下我在这里建议的方法 。 你无需提前了解全部内容 ，你要做的首要的一件事情就是亲自操作和亲身体验 。采用这种方法 ，你通过探索和实践进行学习 。在操作的过程中 ，你的大脑自然地产生各种问题 ：它是如何工作的 ？如果我这么做 ，会发生什么 ？我该如何解决这个问题 ？这些问题引导着你走向真正重要的方向 。当回过头寻找问题的答案的时 ，不只是这些问题迎刃而解 ，而且你记得的东西比你学习的东西要多得多 ，因为你所学到的都是对你很重要的东西 。在这一步中 ，你要采用在第 7步中学到的知识 。不用担心结果 ，勇敢探索吧 。如果你正在学一门新技术或者新的编程语言 ，你可以先创建一个小项目来测试这一步的效果 。把那些暂时还没有答案的问题记录下来 ，你在下一步中会有机会找出这些问题的答案 。</p>
<h3 id="第九步：全面掌握，学以致用"><a href="#第九步：全面掌握，学以致用" class="headerlink" title="第九步：全面掌握，学以致用"></a>第九步：全面掌握，学以致用</h3><p>好奇心是学习特别是自学的重要组成部分 。当我们还是孩子的时候 ，我们就处于主要由好奇心驱动的快速学习期 。我们想知道世界是如何运转的 ，所以我们提出问题 ，四处寻求答案 ，借此来了解我们所处的这个世界 。但是 ，随着我们日渐长大 ，大部分好奇心也随之消失 ，我们把世界上的一切看作理所当然 。结果 ，我们的学习放缓 ，我们觉得教育非常枯燥 ，并不令人着迷 。</p>
<p>这一步的目标就是让你找回好奇心驱动的学习 。 在第 8步中 ，你通过动手操作发现了一些尚未找到答案的问题 。现在 ，是时候来回答这些问题了 。在这一步中 ，你要利用先前收集到的所有资料 ，进行深入学习 。</p>
<p>让我们再回到数码摄影的例子 。假设你已经在调试光圈的过程中积累了一些问题 ，这时你可以通过阅读相关主题的资料来回答这些问题 。你可以通览已有的资料 ，仔细查找与光线和其他通过操作发现的问题有关的内容 。</p>
<p>为了有效利用自己选择的资料 ，为上一步产生的问题寻求答案 ，阅读文字 、观看视频 、与他人交流都是必要手段 。这能让你沉浸在学习材料中 ，尽可能地汲取知识 。</p>
<p>不要害怕回头再去操作 ，付出更多 ，因为这不仅能让你找到问题的答案 ，也能让你学到新东西 。给自己足够多的时间去深入理解自己的主题 ，你可以阅读 ，可以实验 ，可以观察 ，也可以操作 。</p>
<p>不过请记住 ，你依然没有必要把收集到的所有资料全部仔细看一遍 。你只需要阅读或观看与当前所学相关的部分 。我们很少能有足够的时间把一本书从头读到尾 。这些资料只是帮你自学 ，基本上你可以以解决在动手操作中发现的问题为主要目的 。</p>
<p>最后，千万不要忘了，你在第3步中定义的成功标准 。试着把自己正在学习的内容与最终目标关联起来 。你掌握的每个模块 ，都应该以某种方式推动你向着终极目标前进 。</p>
<h3 id="第十步：乐为人师，融会贯通"><a href="#第十步：乐为人师，融会贯通" class="headerlink" title="第十步：乐为人师，融会贯通"></a>第十步：乐为人师，融会贯通</h3><p>你告诉我的，我都忘了。你教会我的，我都记得。让我乐在其中，我就一定能学会。<br>                                                            ——本杰明 ·富兰克林</p>
<p>大多数人都不敢为人师 。 我曾经也是 。当你在思考自己知道的东西 （或者你认为自己知道的东西 ）是否值得教给别人的时候 ，很容易陷入自我怀疑之中 。但是 ，如果你想深入地掌握一门学问 ，想对这门学问做到融会贯通 ，那么你必须要做到 “好为人师 ” 。除此之外别无他法 。<br>在现实中 ，你只需要超前别人一步 ，就可以成为他们的老师 。有时候 ，比学生超前太多的 “专家 ”反而不能得心应手地 “教 ” ，因为他们无法与学生产生共鸣 。他们忘了初学者是什么样子 ，很容易专注于他们认为简单的细节 。</p>
<p>如果你想教别人自己学到的关于光线如何影响数码摄影的知识 ，你可以创建一个简单的 Y o u T u b e视频 ，展示不同的光源及它们对拍摄的影响 。你甚至还可以再简单一些 ，向朋友或同事解释光线是如何影响数码摄影效果的 ，我敢肯定许多人会对这个谈话很感兴趣 。</p>
<p>在这一步中 ，我会要求你走出自己的舒适区 ，将自己学到的知识教给别人 。要想确定你确实掌握了某些知识 ，这是唯一的办法 ；同时 ，在你将自己所学介绍给他人时 ，这也是查缺补漏的好办法 。在这一过程中 ，你要切实剖析并理解自己所学的知识 ，将其内化到自己的思想 ；同时 ，你也要用能够让他人理解的方式精心组织这些信息 。以我个人的经验来说 ，在我开始 “乐为人师 ”之后 ，我不仅在职业发展和专业成长上有了巨大飞跃 ，我的理解能力也更上一层楼 。</p>
<p>你可以用多种方式将自己所学教给他人 。你可以写博客，也可以制作bilibili视频 。你也可以跟自己的爱人探讨 ，将自己所学解释给他 /她 。重点在于，你要花时间将自己学到的东西从大脑中提取出来 ，以别人能够理解的方式组织起来 。在经历了整个这个过程之后你会发现 ，有很多你以为自己明白了的知识点 ，其实并没有摸透 。于是你会将那些以前自己没太明白的东西联系起来 ，并且简化自己大脑中已有的信息 ，将它们浓缩并经常复习 。</p>
<p>前景非常诱人 。所以，不管做什么，千万不要跳过这一步 。这一步对于保持信息以及深入理解知识而不仅仅只是流于表面至关重要 。</p>
<h4 id="教授知识的途径"><a href="#教授知识的途径" class="headerlink" title="教授知识的途径"></a>教授知识的途径</h4><ul>
<li>撰写博客和文章</li>
<li>出bilibili视频教程</li>
<li>发表演讲</li>
<li>与朋友进行对话探讨</li>
<li>在在线论坛上回答问题</li>
</ul>
<h3 id="最后的思考"><a href="#最后的思考" class="headerlink" title="最后的思考"></a>最后的思考</h3><p>学会自我教育需要奉献精神和辛勤工作 ，但是你也能从中收获无比丰厚的回报 。 “十步学习法 ”并非一个神奇公式 ，能够让你瞬间变得聪明伶俐 ，但这种方法可以将你的学习过程更为结构化 ，而不是漫无目的地一头扎进浩淼的知识海洋之中 ；这种方法通过利用人天生的好奇心来帮助你吸收更多的知识 ，而我们中大多数人正是在好奇心的驱使下才学到很多本领的 。</p>
<p>如果此方法中有些步骤对你不起作用 ，或者你觉得某些形式完全没有必要 ，完全可以弃之不理 。这些步骤本身并不重要 ，这一学习过程背后的理念才是真正重要的 。 重点就是你要开发出一套适合自己的自学体系 ，一套你可以持续不断地加以运用而获得丰硕成果的方法体系 。</p>
<blockquote>
<p><strong>采取行动</strong></p>
<p>针对你在第 2 9章中制订的学习计划的每一个模块执行第 7步到第 1 0步 ，完成你的学习实验 。现在 ，不要跳过任何步骤 。研究一下 ，如何让这种方法对你奏效 ，然后尝试优化它。</p>
</blockquote>
<p>本篇博客借鉴的链接：<a href="https://www.jianshu.com/p/1e6e27eefe76">https://www.jianshu.com/p/1e6e27eefe76</a></p>
<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>学习方法</category>
      </categories>
      <tags>
        <tag>程序员</tag>
      </tags>
  </entry>
  <entry>
    <title>精准还原bilibili官网</title>
    <url>/year/08/15/%E5%89%8D%E7%AB%AF%E8%BF%98%E5%8E%9Fbilibili%E5%AE%98%E7%BD%91/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="面试题（刨根问底式）"><a href="#面试题（刨根问底式）" class="headerlink" title="面试题（刨根问底式）"></a>面试题（刨根问底式）</h1><p>1.什么叫做标签语意化？<br>答：合理的标签做合适的事情（每一个标签都有自己的语意）<br>2.都有哪些标签？<br>答：块级标签：div , p , h1~h6 , ul/li , ol/li , dl/dt/dd , 或者 header  footer  main  section  aside<br>行内标签：<br>行内块级标签：<br>3.三大类标签的区别以及相互转换？</p>
<p>4.display:block/inline-block/inline , display除了这些值还有哪些？<br>none   flex  table  grid …<br>5.none 控制隐藏，其他让一个元素消失在视线中的方式有哪些？<br>visibillity:hidde       ;   opacity:0   ;  定位后调整z-index   ；  足够大的负margin或者负top值<br>6.visibility:hidden和none的区别？<br>opacity设置透明度，IE中如何设置？filter在项目中除了设置透明度还可以干嘛？在什么需求下用到了-margin<br>7..标签语意化的意义？</p>
<blockquote>
<p>性能的提高<br>有助于SEO搜索引擎的优化（前提：内容不是基于客户端的渲染）<br>有助于开发和维护</p>
</blockquote>
]]></content>
      <categories>
        <category>学习知识</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>PR剪辑</title>
    <url>/year/08/10/PR%E5%89%AA%E8%BE%91/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      <categories>
        <category>视频剪辑</category>
      </categories>
      <tags>
        <tag>PR</tag>
      </tags>
  </entry>
  <entry>
    <title>日语学习</title>
    <url>/year/08/08/%E6%97%A5%E8%AF%AD%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="日语的自我介绍"><a href="#日语的自我介绍" class="headerlink" title="日语的自我介绍"></a>日语的自我介绍</h1><h2 id="第一课"><a href="#第一课" class="headerlink" title="第一课"></a>第一课</h2><h3 id="打招呼-问候"><a href="#打招呼-问候" class="headerlink" title="打招呼-问候"></a>打招呼-问候</h3><blockquote>
<p>平假名作用：</p>
<blockquote>
<p>1.用来标注汉字的发音<br>2.单独构成单词　<br>　练习：初次见面：初めまして（有文化）、はじめまして<br>　     我是郭：かくです 我叫郭：かくと申します<br>　　　　山东省：さんとうしょう(sa nn to u syo u(拗音))からきました　　　　二十一：にじゅういっさい（ni jyu u i ssa i）歳（さい）です</p>
</blockquote>
</blockquote>
<h2 id="第二课"><a href="#第二课" class="headerlink" title="第二课"></a>第二课</h2><h3 id="自己的职业"><a href="#自己的职业" class="headerlink" title="自己的职业"></a>自己的职业</h3><blockquote>
<p>1．我的职业是学生：いまはがくせいです（今は学生です）<br> 我的职业是自由职业：いまはじゆうぎょうです（今は自由業です）</p>
</blockquote>
<h3 id="兴趣-爱好"><a href="#兴趣-爱好" class="headerlink" title="兴趣-爱好"></a>兴趣-爱好</h3><blockquote>
<p>王安妮が好きです</p>
</blockquote>
<h2 id="第三课"><a href="#第三课" class="headerlink" title="第三课"></a>第三课</h2><h3 id="我的梦想"><a href="#我的梦想" class="headerlink" title="我的梦想"></a>我的梦想</h3><blockquote>
<p>第一人称：私(wa ta shi )・僕(bo ku)・俺(o re )・あたし(a ta shi )<br>梦想是成为大老板：夢は社長になることです(yu me ha sya cyo u ni na ru ko to de su )<br>职业：</p>
<blockquote>
<p>声优：せいゆう(se i yu u )                   漫画家：まんがか (ma nn ga ka)<br>歌手：かしゅ        (ka syu)                   土豪：お金持ち  ( o ka ne mo chi )</p>
</blockquote>
</blockquote>
<h3 id="很高兴见到你"><a href="#很高兴见到你" class="headerlink" title="很高兴见到你"></a>很高兴见到你</h3><p>どうぞよろしくおねがいします（do u zo yo ro shi ku o ne ga i shi ma su ）</p>
<h1 id=""><a href="#" class="headerlink" title=""></a></h1><p>r—l</p>
]]></content>
      <categories>
        <category>学习知识</category>
      </categories>
      <tags>
        <tag>日语</tag>
      </tags>
  </entry>
  <entry>
    <title>通过Hexo建立我的第一个博客</title>
    <url>/year/08/01/Create%20Myblog/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一、软件系统的安装"><a href="#一、软件系统的安装" class="headerlink" title="一、软件系统的安装"></a>一、软件系统的安装</h1><h2 id="1、安装Git"><a href="#1、安装Git" class="headerlink" title="1、安装Git"></a>1、安装Git</h2><blockquote>
<p>Git是目前世界上最先进的分布式<strong>版本控制</strong>系统，可以有效、高速的处理从很小到非常大的项目版本管理。   <a href="https://git-scm.com/">Git的安装地址</a>   <a href="https://www.cnblogs.com/ximiaomiao/p/7140456.html">Git的安装教程</a><br>Git 命令使用的小技巧：Ctrl+ins  复制             Shift+ins 粘贴</p>
</blockquote>
<h2 id="2、安装Node-js"><a href="#2、安装Node-js" class="headerlink" title="2、安装Node.js"></a>2、安装Node.js</h2><blockquote>
<p>Hexo是基于nodeJS编写的，所以需要安装一下nodeJS和里面的npm工具。<br><a href="https://nodejs.org/en/">Node.js的安装地址</a> &gt;&gt; 下载左边的Recommended For Most Users</p>
</blockquote>
<p>对于Linux系统只需输入一下命令:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install nodejs</span><br><span class="line">sudo apt-get install npm</span><br></pre></td></tr></table></figure>
<blockquote>
<p>安装完成后，打开命令行，或者打开生成的Node.js command prompt ，分别输入以下命令行</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v </span><br></pre></td></tr></table></figure>
<p>Windows在git安装完后，可以直接使用git bash来敲命令行了。</p>
<h2 id="3、安装Hexo"><a href="#3、安装Hexo" class="headerlink" title="3、安装Hexo"></a>3、安装Hexo</h2><h3 id="Hexo简介"><a href="#Hexo简介" class="headerlink" title="Hexo简介:"></a>Hexo简介:</h3><blockquote>
<p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。大家可以进入<a href="https://hexo.io/zh-cn/">hexo官网</a>进行详细查看。</p>
<blockquote>
<p>由于node安装插件是从国外服务器下载，受网络影响大，速度慢且可能出现异常。所以淘宝团队（阿里巴巴旗下业务阿里云）为了解决这件事，设置了个国内的服务器来进行node的安装(就是淘宝镜像源)。安装，检测完成后，只需要使cnpm install即可。<a href="https://blog.csdn.net/qq_38566465/article/details/105857306?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522159634172319724846448879%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=159634172319724846448879&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v3~rank_business_v1-2-105857306.ecpm_v3_rank_business_v1&utm_term=%E6%B7%98%E5%AE%9D%E9%95%9C%E5%83%8F%E6%BA%90&spm=1018.2118.3001.4187">更多信息</a><br>安装淘宝的镜像源（如果错误就重来，因为连接可能不稳定，不要害怕多试几次就可以了）</p>
</blockquote>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>
<p><code>cnpm</code>（返回cnpm的信息）<br><code>cnpm -v</code>（返回cnpm的版本信息）<br><code>cnpm install -g hexo-cli</code>（安装hexo框架）<br><code>hexo -v</code>（返回hexo的版本信息）<br><code>mkdir blog</code>(创建blog目录)<br><code>cd blog</code>(进入blog目录)<br><code>hexo init</code>(Window初始化博客) <code>sudo hexo init</code>(Linux初始化博客)<br><code>hexo server</code>(启动本地博客服务)<br>之后就可以进入浏览器输入本地访问地址：<a href="http://localhost:4000/">http://localhost:4000/</a> 大概长这个样：<br><img src="http://ww1.sinaimg.cn/large/d40b6c29gy1fvrksvj6e0j211c0f2n60.jpg" alt="hexo"><br><strong>注意：访问本地页面的时候hexo server 不可以按ctrl+c停止服务，否则会报404</strong><br>若输入上述命令后出现问题，则输入这行命令<code>npm install hexo-deployer-git --save</code></p>
<h1 id="二、环境配置"><a href="#二、环境配置" class="headerlink" title="二、环境配置"></a>二、环境配置</h1><h2 id="1、GitHub中建仓库"><a href="#1、GitHub中建仓库" class="headerlink" title="1、GitHub中建仓库"></a>1、GitHub中建仓库</h2><p>首先你得有个GitHub的账号，如果没有到<a href="https://github.com/join">官网注册</a>一个，账号弄完以后，即可建立仓库<img src="https://s1.ax1x.com/2020/08/02/aJvk2F.png" alt=" creat repository"> </p>
<hr>
<p><img src="https://s1.ax1x.com/2020/08/02/aJzPcF.png" alt="repository"><br>创建一个和你用户名相同的仓库，后面加.github.io，只有这样，将来要部署到GitHub page的时候，才会被识别，也就是xxxx.github.io，其中xxx就是你注册GitHub的用户名。填写完毕后点击Create repository。</p>
<p>在Blog目录下安装一个hexo部署插件，输入命令：<br>:<code>cnpm install --save hexo-deployer-git</code><br>找到Blog文件中的   <code>_config.yml</code>  文件，使用编译器打开，<br>找到这部分代码，（原始的是没有repo，和branch的，而且type后面也没有东西）<br>对这段代码进行更改</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: https://github.com/Yourgithubname/Yourgithubnamei.github.io.git   </span><br><span class="line">  branch: master  </span><br></pre></td></tr></table></figure>
<p>其中Yourgithubname就是前面图片中创建库用的Owner</p>
<h2 id="2、生成SSH添加到GitHub"><a href="#2、生成SSH添加到GitHub" class="headerlink" title="2、生成SSH添加到GitHub"></a>2、生成SSH添加到GitHub</h2><p>SSH，简单来讲，就是一个秘钥，其中，id_rsa是你这台电脑的私人秘钥，不能给别人看的，id_rsa.pub是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。<br>继续在你的blog文件中，空白处，右键打开git bash ，输入命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;Yourname&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;Youremail&quot;</span> </span><br></pre></td></tr></table></figure>
<p>其中的Yourname输入你的GitHub用户名，Youremail输入你GitHub的邮箱。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure>
<p>可以用这两条命令查看，是否输入正确。之后输入以下命令创建SSH：<br><code>ssh-keygen -t rsa -C &quot;Youremail&quot;</code></p>
<blockquote>
<p>这个时候电脑创建了一个.ssh的文件,一般情况下C:\Users\ASUS.ssh的路径，在文件夹中找到id_rsa.pub文件，打开并复制里面的所有信息，之后在GitHub的setting中，找到SSH keys的设置选项，点击New SSH key把你复制的信息粘贴进去。<br>转到git bash，输入以下命令查看是否成功：<br><code>ssh -T git@github.com</code></p>
</blockquote>
<h2 id="3、将hexo部署到GitHub"><a href="#3、将hexo部署到GitHub" class="headerlink" title="3、将hexo部署到GitHub"></a>3、将hexo部署到GitHub</h2><p>依次输入命令： </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>
<p>其中 <code>hexo clean</code>清除了你之前生成的东西，也可以不加。<br><code>hexo generate</code> 生成静态文章，可以用 hexo g缩写<br><code>hexo deploy</code> 部署文章到GitHub，可以用hexo d缩写<br>注意deploy时可能要你输入username和password。<br>部署完毕后，过一会儿就可以在<a href="http://yourname.github.io/">http://Yourname.github.io</a> 这个网站看到你的博客了！！</p>
<h2 id="4、个人域名："><a href="#4、个人域名：" class="headerlink" title="4、个人域名："></a>4、个人域名：</h2><blockquote>
<p>我觉得没必要，因为我现在只是个学生，需要的只是一个平台而已，没必要为了网页域名的逼格去购买域名，而且有的购买的便宜的域名，访问速度很慢，还不如就用GitHub提供的域名，这仅仅是现在大学生我的一个小想法，不喜勿喷。</p>
</blockquote>
<h2 id="5、写文章并发布文章到GitHub"><a href="#5、写文章并发布文章到GitHub" class="headerlink" title="5、写文章并发布文章到GitHub"></a>5、写文章并发布文章到GitHub</h2><p><code>hexo new newpapername</code><br>在<code>source/_post</code>中打开markdown文件，就可以开始编辑了。当你写完的时候，再在blog文件中，空白处，右键打开git bash ，输入命令来更新博客：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<h1 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h1><blockquote>
<p>我也是从CSDN上找到的教程，通过<a href="https://blog.csdn.net/sinat_37781304/article/details/82729029?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase">这个博主的博客</a>来慢慢的创建了自己的博客，期间也遇到了不少的麻烦，从早上肝到凌晨3,4点才把博客建立起来，其中的小细节真的很气人，我在config.yml文件中的repo设置中，把github写成了gethub，之后就在CSDN上到处搜原因，找了好久的方法，最后才发现是自己的repository的建立都写错了，导致我复制到config.yml的内容有错，部署不到GitHub的库里，更部署不到hexo博客里，哎，代码这东西就是要仔细，尤其是在一些没有提示错误的软件上写代码，更要细心。</p>
</blockquote>
<p>npm</p>
]]></content>
      <tags>
        <tag>Markdown练习运用文章</tag>
      </tags>
  </entry>
  <entry>
    <title>英语口语</title>
    <url>/year/08/01/%E8%8B%B1%E8%AF%AD%E5%8F%A3%E8%AF%AD/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="英语兔音标课"><a href="#英语兔音标课" class="headerlink" title="英语兔音标课"></a>英语兔音标课</h1><h2 id="音标历史"><a href="#音标历史" class="headerlink" title="音标历史"></a>音标历史</h2><blockquote>
<p>1.国际音标IPA（International Phonetic Alphabet）发明于19世纪末<br>2.丹尼尔 · 琼斯教授（Daniel Jones）出版的一本书名为：English Pronouncing Dictionary，其中大量的音标都是从国际音标里面照搬过来的，为的是给那个年代的标准英式英语(Rreceived Pronunciation)注音，这就是DJ音标（广义上的国际音标）的诞生，广泛应用于中国的教育教学当中<br>3.Hohn Kenyon &amp; Thomas Knott 发明了PRONOUNCING  DICTIONARY AMERICAN ENGLISH“美国英语发音词典”，也就是KK音标，基本只在台湾地区的教材中使用，即使在美国本土，使用也并不广泛<br>4.Webster’s Dictionary （韦氏词典）才是大多数美国人从小到大使用的词典<br>5.American Heritage Dictionary(AHD)美国传统英语词典<br>6.Respelling方法就是用我们熟悉的简单的音来标注一些不熟悉的难的音,用的就是常用词的音去标注</p>
<blockquote>
<p>后面英语兔老师用的是DJ音标，最主要的原因是DJ音标被国内的主流词典广泛使用，列入牛津，剑桥和朗文词典。</p>
</blockquote>
</blockquote>
<h2 id="音标学习"><a href="#音标学习" class="headerlink" title="音标学习"></a>音标学习</h2><h3 id="DJ音标新版（IPA-88）"><a href="#DJ音标新版（IPA-88）" class="headerlink" title="DJ音标新版（IPA 88）"></a>DJ音标新版（IPA 88）</h3><p><img src="https://s1.ax1x.com/2020/08/12/avMdDf.png" alt="DJ音标示范"></p>
<h3 id="KK音标"><a href="#KK音标" class="headerlink" title="KK音标"></a>KK音标</h3><p><img src="https://s1.ax1x.com/2020/08/13/azXDuq.png" alt="KK音标示范"></p>
<h3 id="元音"><a href="#元音" class="headerlink" title="元音"></a>元音</h3><h4 id="1-iː"><a href="#1-iː" class="headerlink" title="1./iː/"></a>1./iː/</h4><p>bee,fee,pea,read,meat,lead</p>
<blockquote>
<p>‘ː’  表示长音<br>和“ 医 ”发音相似；<br>舌位更高；<br>嘴角要向两侧拉开</p>
<blockquote>
<p>对应KK音标中把长音符号去掉/i/</p>
</blockquote>
</blockquote>
<h4 id="2-ɪ"><a href="#2-ɪ" class="headerlink" title="2./ɪ/"></a>2./ɪ/</h4><p>bit,fit,pit,lit,hit,fish </p>
<blockquote>
<p>舌位更低，再低就更像/e/；<br>舌尖在下齿后方；<br>嘴角没有/i:/那么咧开；<br>发音更加’放松‘</p>
<blockquote>
<p>在KK音标中写法一样</p>
</blockquote>
</blockquote>
<h4 id="3-e"><a href="#3-e" class="headerlink" title="3./e/"></a>3./e/</h4><p>bed,get,pet,let,met,set </p>
<blockquote>
<p>双唇自然张开，口腔放松；<br>舌尖在下牙齿后方，舌面平放；<br>有些人人说中文发的“短促”的  ’哎‘</p>
</blockquote>
<h4 id="4-ae"><a href="#4-ae" class="headerlink" title="4./æ/"></a>4./æ/</h4><p>bad ,fat,pat,lad,mat,sat</p>
<blockquote>
<p>最容易读错的音之一；<br>口型一定要张大，饱满；<br>嘴角也要向两边拉伸；<br>舌端在下牙齿后方</p>
<blockquote>
<p>绕口令：Ed h<u>a</u>d edited it.</p>
</blockquote>
</blockquote>
<h4 id="5-ɜː"><a href="#5-ɜː" class="headerlink" title="5./ɜː/"></a>5./ɜː/</h4><p>her,person,learn,bird,word,fur,urgent detergent/ˈɜːdʒənt dɪˈtɜːdʒənt/</p>
<blockquote>
<p>嘴自然张开，唇和舌都自然放松；<br>像普通话里的“饿”；<br>要确保发音时间够长；<br>若不重读，发音更短的话—-&gt;/ə/</p>
<blockquote>
<p>单词字母拼写有er，ear，ir，ur等情况，体现的是英语拼写和发音往往不对应的一点<br>r-colorization:美式英语中，/ɜː/后接/r/,写作/ɜːr/（/ɝ/）,这就是DJ音标给美式英语标注的写法</p>
</blockquote>
</blockquote>
<h4 id="6-ə"><a href="#6-ə" class="headerlink" title="6./ə/"></a>6./ə/</h4><p>about,problem,easily,memory,supply,syringe,balloon,taken,family,pencil,freedom,support,analysis</p>
<blockquote>
<p>嘴自然张开，唇和舌都自然放松；<br>像是普通话里的轻声“么”的韵母；<br>不要重读，轻轻地让气流冲出声带自然读出；</p>
<blockquote>
<p>若是重读，再延长读音的话—-&gt;/ɜː/ ;<strong>英语中出现频率最高，最特殊，最重要</strong>，甚至有个单独的名字schwa（“中央元音”或“中性元音”），因为很多单词中的元音字母都读/ə/，而不是元音字母本音，也可以理解为过渡音<br>r-colorization:美式英语中，/ə/后接/r/,写作/ər/（/ɚ/）,这就是DJ音标给美式英语标注的写法</p>
</blockquote>
</blockquote>
<p><strong>/ə/是一个非常特殊的音：</strong><br><strong>1.让说话者在不需要强调某个音时用它代替</strong><br><strong>2.为了在某个音上减少所花时间</strong><br><strong>3.弱化成一个“中性的默认音”</strong><br><strong>4./ə/至关重要：英语诗歌基于节奏的语言（stress-timed language）,而我们的中文是基于音节的语言（syllable-timed langage）</strong><br><strong>5.弱读的现象：I can try to do it—&gt;/ai kən trai tə du: ət/</strong><br><strong>6.有时候/ə/甚至被省略不读：family—&gt;famly</strong></p>
<h4 id="7-ɑː"><a href="#7-ɑː" class="headerlink" title="7./ɑː/"></a>7./ɑː/</h4><p>father,fast,glass,car,park,mark</p>
<blockquote>
<p>/ɑː/和“啊”相似，但不同<br>/ɑː/的口型更大，发音更靠口腔后部（舌根处）<br>发音时长要足够长</p>
<blockquote>
<p>在英式英语和美式英语里发音基本一致，列如：father，spa，palm<br>在英音中有/ɑː/的很多词，在美音中是/æ/，列如：bath,ask,glass,fast,last,<br>在美音中有/ɑː/（DJ音标），也就是/ɑ/（KK音标），的很多词在英音中是/ɒ/，列如：hot,top,box<br>如果这个音后面跟字母r，美音中往往r化（r-colorization），发/ɑr/这个音，列如：bar,card,large</p>
</blockquote>
</blockquote>
<h4 id="8-v"><a href="#8-v" class="headerlink" title="8./ʌ/"></a>8./ʌ/</h4><p>but,hut,must,son,ton,done</p>
<blockquote>
<p>舌尖在下牙齿后方，舌头平放<br>发音靠口腔中后方<br>近似普通话中的“啊”，但是口型没那么大，时长更短</p>
<blockquote>
<p>与美音发音不同，美音/ʌ/和中央元音/ə/的发音部位和舌位可以说是相同的，区别在于是否重读，美音中的/ʌ/发音，更靠近中文的“呃”，而不是“啊”<br>在美式英语中/ʌ/和/ə/的发音一般不做明显的口型舌位区分，区别体现在发音轻重上，/ə/只出现在轻度音节中，而/ʌ/只出现在重读音节中。custom /ˈkʌstəm/中的/ə/和/ʌ/音体现出了发音的轻重。</p>
</blockquote>
</blockquote>
<h4 id="9-ʊ"><a href="#9-ʊ" class="headerlink" title="9./ʊ/"></a>9./ʊ/</h4><p>book,look,good,took,bush,would</p>
<blockquote>
<p>/ʊ/和普通话中的“呜”相似，但并不相同<br>发/ʊ/时，嘴唇没那么”噘“，更放松，时长更短，发音更靠后<br>/ʊ/并不是把长音的/uː/短着读，/ʊ/的唇形更圆，更放松</p>
<blockquote>
<p>KK音标中没有/ʊ/，<strong>但对应的是/u/是个缩小了的大写字母U</strong><br>绕口令：Mr.C<u>oo</u>k said to a c<u>oo</u>k:”L<u>oo</u>k at this c<u>oo</u>k-b<u>oo</u>k.It’s very g<u>oo</u>d.”So the c<u>oo</u>k t<u>oo</u>k the advice of Mr.C<u>oo</u>k and bought the b<u>oo</u>k.<br>How much w<u>oo</u>d w<u>ou</u>ld a w<u>oo</u>dchuck chuck if a w<u>oo</u>dchuck c<u>ou</u>ld chuck w<u>oo</u>d?He w<u>ou</u>ld chuck,he w<u>ou</u>ld,as much as he c<u>ou</u>ld,and chuck as much w<u>oo</u>d as a w<u>oo</u>dchuck w<u>ou</u>ld if a w<u>oo</u>dchuck c<u>ou</u>ld chuck w<u>oo</u>d.</p>
</blockquote>
</blockquote>
<h4 id="10-uː"><a href="#10-uː" class="headerlink" title="10./uː/"></a>10./uː/</h4><p>too,food,loose,prove,moon,soon</p>
<blockquote>
<p>和中文普通话中“呜”相似，但并不相同<br>口型没有那么圆，而是更扁<br>发音部位靠口腔后部</p>
<blockquote>
<p>比较：”too“和“兔”<br>KK音标中就是去掉长音符号/u/,实际上KK音标中没有长音符号，主要是因为KK音标的元音时长往往视具体所在单词情况而定</p>
</blockquote>
</blockquote>
<h4 id="11-ɒ"><a href="#11-ɒ" class="headerlink" title="11./ɒ/"></a>11./ɒ/</h4><p>top,hot,lot,box,stop,wash</p>
<blockquote>
<p>和普通话中的“凹”相似，就像是汉语拼音中的ao，但并不完全相同<br>发/ɒ/时，嘴型更小，时间更短</p>
<blockquote>
<p>在老版的DJ音标中是/ɔ/，严格来说，在KK音标中没有对应的音标<br>绕口令：I thought that cl<u>o</u>th w<u>a</u>s a l<u>o</u>t for my father.<br>在英式英语中的/ɒ/这个音，在美音中一般读/ɑː/</p>
</blockquote>
</blockquote>
<h4 id="12-oː"><a href="#12-oː" class="headerlink" title="12./ɔː/"></a>12./ɔː/</h4><p>caught,bought,law,saw,door,four</p>
<blockquote>
<p>和普通话的“哦”相似<br>嘴唇要撅起来，圆而外凸<br>口腔后方发音</p>
<blockquote>
<p>KK音标就是去掉长音符号<br>若该音后面跟r，美音中往往r化（r-colorization）发/ɔːr/这个音<br><img src="https://s1.ax1x.com/2020/08/13/dpFKsS.png" alt="英音和美音区别"></p>
</blockquote>
</blockquote>
<h4 id="13-eɪ"><a href="#13-eɪ" class="headerlink" title="13./eɪ/"></a>13./eɪ/</h4><p>make,date,cake,safe,play,plane</p>
<blockquote>
<p>是双元音（diphthong）,有两个原因组成<br>/e/和/ɪ/一前一后快速紧密发出<br>发这个音的时候口腔是有变化的<br>类似“嘿”的韵母</p>
<blockquote>
<p>常见错误：/eɪn/读成/en/，列如：plane,train,rain,main,dangerous,strange</p>
</blockquote>
</blockquote>
<h4 id="14-aɪ"><a href="#14-aɪ" class="headerlink" title="14./aɪ/"></a>14./aɪ/</h4><p>time,bike,nice,like,site,life</p>
<blockquote>
<p>类似于“爱”，但更加饱满</p>
<blockquote>
<p>KK音标中写法和发音基本一致的</p>
</blockquote>
</blockquote>
<h4 id="15-oɪ"><a href="#15-oɪ" class="headerlink" title="15./ɔɪ/"></a>15./ɔɪ/</h4><p>boy,toy,soy,voice,noise,moist</p>
<blockquote>
<p>注意的是容易把/ɪ/读成/e/，误读成/ɔe/</p>
<blockquote>
<p>KK音标中写法和发音基本一致的</p>
</blockquote>
</blockquote>
<h4 id="16-aʊ"><a href="#16-aʊ" class="headerlink" title="16./aʊ/"></a>16./aʊ/</h4><p>how,cow,allow,house,loud,mouse</p>
<blockquote>
<p>类似普通话中的“嗷”，但不相同</p>
<blockquote>
<p>这是个双元音，区别于/ɔː/<br>KK音标中写法和发音基本一致的</p>
</blockquote>
</blockquote>
<h4 id="17-əʊ"><a href="#17-əʊ" class="headerlink" title="17./əʊ/"></a>17./əʊ/</h4><p>open,hope,post</p>
<blockquote>
<p>相似于我们普通话中的“呕”，但并不相同<br>英音发音更靠前，而美音和我们拼音的ou更相似</p>
<blockquote>
<p>DJ音标的/əʊ/在KK音标中对应的符号/o/<br>我们在用DJ音标标注美音时一般都用/oʊ/这个音标，代替/əʊ/</p>
</blockquote>
</blockquote>
<h4 id="18-ɪə"><a href="#18-ɪə" class="headerlink" title="18./ɪə/"></a>18./ɪə/</h4><p>idea,area,various,dear,fear,here</p>
<blockquote>
<p>从/ɪ/到/ə/过渡时舌端往口腔后部上扬，导致末尾/ə/误读成卷舌</p>
<blockquote>
<p>在读英音的时候，单词中即使出现字母r，单词的内部也不会‘r化’<br>在读美音的时候，只有单词内部出现r化才有可能‘r化’，所以对于idea，不论是在英音还是美音都不可能出现’r‘化的<br>美音中，单词中出现r，则对应的读音为/ɪr/,、<br>在KK音标中写法和发音基本一致的</p>
</blockquote>
</blockquote>
<h4 id="19-eə"><a href="#19-eə" class="headerlink" title="19./eə/"></a>19./eə/</h4><p>hair,chair,pair,fare,care,dare</p>
<blockquote>
<p>因为是双元音，所以注意读音，可能发成/æə/,/ær/,/aɪə/</p>
<blockquote>
<p>依然要注意，在读英音时，即使单词中出现r，也不会’r化‘<br>在KK音标中对应的是/ɛr/,因为在美式英语中，读音在英音中包含/eə/的词基本上都包括r字母，在美音中‘r化’</p>
</blockquote>
</blockquote>
<h4 id="20-ʊə"><a href="#20-ʊə" class="headerlink" title="20./ʊə/"></a>20./ʊə/</h4><p>poor,tour,moor,tore,pore,more,pure,cure,lure</p>
<blockquote>
<p>在/jʊə/音中，/j/是个辅音，也有人称其为“半元音”<br>把/ʊə/和/ɔː/区分开来</p>
<blockquote>
<p>在KK音标中写作/ur/，其中的/u/音是大写U的缩小版，相当于/ɪ/是缩小了的大写字母I<br>在美式英语中，读音在英音中包含/ʊə/的词基本都包含字母r，在美音中’r化‘</p>
</blockquote>
</blockquote>
<h3 id="辅音"><a href="#辅音" class="headerlink" title="辅音"></a>辅音</h3><h4 id="1-p-b"><a href="#1-p-b" class="headerlink" title="1./p/  /b/"></a>1./p/  /b/</h4><p>peak,pet,pig<br>1.如果p后有元音</p>
<blockquote>
<p>比如：peak,这样的单词/p/的发音基本都是送气音（aspirated）<br>和普通话中的“泼”的声母发音基本一致</p>
</blockquote>
<p>2.如果p紧跟s</p>
<blockquote>
<p>比如：speak,这样的单词/p/的发音基本都是不送气音（unaspirated）<br>普通话中的”波“的声母，但发音不同</p>
</blockquote>
<p>3.如果p后紧跟某些辅音</p>
<blockquote>
<p>比如：trapdoor,help,leap<br>嘴巴闭上基本完成发音<br>这种发音也叫作：无声除阻音（unreleased stop）（也称“不完全爆破音”）</p>
<blockquote>
<p>虽然在DJ音标和KK音标中写法相同，但是读音不同，在语音学上叫做“同位异音”或“音位变体”（allophone）</p>
</blockquote>
</blockquote>
<p>bed,beak,big<br>/b/是浊辅音（vioced consonant）,声带振动<br>与中文的“波”的声母是轻音</p>
<h4 id="2-t-d"><a href="#2-t-d" class="headerlink" title="2. /t/ /d/"></a>2. /t/ /d/</h4><h4 id="3-k-g"><a href="#3-k-g" class="headerlink" title="3./k/ /g/"></a>3./k/ /g/</h4><h4 id="4-f-v"><a href="#4-f-v" class="headerlink" title="4./f/ /v/"></a>4./f/ /v/</h4><h4 id="5-s-z"><a href="#5-s-z" class="headerlink" title="5./s/ /z/"></a>5./s/ /z/</h4><h4 id="6-θ-ð"><a href="#6-θ-ð" class="headerlink" title="6./θ/ /ð/"></a>6./θ/ /ð/</h4><h4 id="7-ʃ-ʒ"><a href="#7-ʃ-ʒ" class="headerlink" title="7./ʃ/ /ʒ/"></a>7./ʃ/ /ʒ/</h4><h4 id="8-tʃ-dʒ"><a href="#8-tʃ-dʒ" class="headerlink" title="8./tʃ/ /dʒ/"></a>8./tʃ/ /dʒ/</h4><h4 id="9-m-n-ŋ"><a href="#9-m-n-ŋ" class="headerlink" title="9./m/ /n/ /ŋ/"></a>9./m/ /n/ /ŋ/</h4><h4 id="10-h"><a href="#10-h" class="headerlink" title="10./h/"></a>10./h/</h4><h4 id="11-j"><a href="#11-j" class="headerlink" title="11./j/"></a>11./j/</h4><h4 id="12-w"><a href="#12-w" class="headerlink" title="12./w/"></a>12./w/</h4><h4 id="13-r"><a href="#13-r" class="headerlink" title="13./r/"></a>13./r/</h4><h4 id="14-l"><a href="#14-l" class="headerlink" title="14./l/"></a>14./l/</h4><h4 id="15-ts-dz"><a href="#15-ts-dz" class="headerlink" title="15./ts/ /dz/"></a>15./ts/ /dz/</h4><h4 id="16-tr-dr"><a href="#16-tr-dr" class="headerlink" title="16./tr/ /dr/"></a>16./tr/ /dr/</h4><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>1.DJ音标旧版本/i,e,u,əː,ei,əu,ɔ,ai,ɛə,uə/，DJ音标新版本/ɪ,ɛ,ʊ,ɜː,eɪ,əʊ,ɒ,aɪ,eə,ʊə/<br>2.KK音标中没有马蹄ʊ<br>3.在中国国内，有些老师教授的是美式英语，但用的是KK音标，就和学校教材里传统是用的DJ音标不同，这点容易混淆<br>4.之所以要学音标，就有点像是学中文时要先从汉语拼音开始学习一样，打牢这个语言的基础<br>5.我们平时接触的英语中有美式发音，又有英式发音，所以导致我们有些时候说英语一句话中既有美音，又有英音，虽然对交流没什么影响，但是既然已经想学好这么语言，就不能在乎多学点，精益求精<br>6.在美式英语中，读音在英音中包含/ʊə//eə/的词基本都包含字母r，在美音中’r化‘</p>
]]></content>
      <categories>
        <category>学习知识</category>
      </categories>
      <tags>
        <tag>英语</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/year/08/01/hello-world/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
